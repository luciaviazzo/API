// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Painting {
  id                 Int                  @id @default(autoincrement())
  title              String               @db.VarChar(80)
  author             String               @db.VarChar(80)
  description        String               @db.Text
  year               Int
  createdAt          DateTime             @default(now()) @map("created at")
  updatedAt          DateTime             @updatedAt @map("updated at")
  UserSavedPaintings UserSavedPaintings[]

  @@map("paintings")
}

model User {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  name               String
  password           String
  role               Role                 @default(USER)
  createdAt          DateTime             @default(now()) @map("created at")
  updatedAt          DateTime             @updatedAt @map("updated at")
  UserSavedPaintings UserSavedPaintings[]

  @@map("users")
}

model UserSavedPaintings {
  painting   Painting @relation(fields: [paintingId], references: [id])
  paintingId Int      @map("painting_id")
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @map("user_id")
  createdAt  DateTime @default(now()) @map("created at")
  updatedAt  DateTime @updatedAt @map("updated at")

  @@id([paintingId, userId])
  @@map("users_saved_paintings")
}

enum Role {
  USER
  ADMIN
}

// @@ altera la tabla 
//  @ altera un campo
